#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include<string.h>
#include<stdlib.h>
#include <malloc.h>

int calcul(int, int, int*, int*, int*);
void afisare(int, int, int*);




int main() {
	int n; int m;
	int* p1, * p2, * p3;
	int i, j;
	scanf("%d", &m);
	scanf("%d", &n);
	p1 = (int*)malloc(n * m * sizeof(int));
	p2 = (int*)malloc(n * m * sizeof(int));
	p3 = (int*)malloc(n * m * sizeof(int));
	if (p1 = (int*)malloc(n * m * sizeof(int))) {
		if (p1 = (int*)malloc(n * m * sizeof(int))) {
			for (i = 0; i < m; i++) {
				for (j = 0; j < n; j++) {
					printf("\np1[%d][%d]=", i, j);
					scanf("%d", p1 + i * m + j);
				}
			}
			for (i = 0; i < m; i++) {
				for (j = 0; j < n; j++) {
					printf("\np2[%d][%d]=", i, j);
					scanf("%d", p2 + i * m + j);
				}
			}
			
		}

	}
	calcul(n, m, p3, p2, p1);
	afisare(m, n, p3);
}


int calcul(int n, int m, int* p3, int* p2, int* p1) {

	int i, j;

	for (i = 0; i < m; i++) {
		for (j = 0; j < n; j++) 
			*(p3 + i * m + j) = *(p1 + m * i + j) + *(p2 + m * i + j);
		
			
		
	}
	return *(p3 + i * m + j);
}
void afisare(int m, int n, int* p3) {

	int i, j;
	for (i = 0; i < m; i++) {
		for (j = 0; j < n; j++) {
			printf("\np3[%d][%d]=%d", i, j, *(p3 + i * m + j));
		}
	}
}	