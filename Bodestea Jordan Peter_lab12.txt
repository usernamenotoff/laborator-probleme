problema 1

#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include<string.h>
int main() {
        char n[20] = { "AAA" };
        int i;
        printf("%s", &n);
        struct student {
                char nume[20];
                char prenume[20];
                char tara_de_origine[20];
                char grupa[20];
                int anul_nasterii;

        }a[20];
        char t[20] = { "Romania" };
        int contor = 0;
        for (i = 0;true; i++) {

                printf("\nnumele: ");
                scanf("%s", a[i].nume);
                printf("\nprenume:");
                scanf("%s", a[i].prenume);
                printf("tara de origine:");
                scanf("%s", a[i].tara_de_origine);
                printf("grupa:");
                scanf("%s", a[i].grupa);
                printf("anul nasterii:");
                scanf("%d",& a[i].anul_nasterii);

                

                if (a[i].tara_de_origine != t)contor++;
                if ( not (strcmp(a[i].grupa, n)))break;
                        }




problema 3

#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include<string.h>
struct informatii{
                int zii = 20;
                int luna = 4;
                int an = 2007;
}a;
void afisare(struct informatii );
void afisare_data_precedenta(struct informatii);
struct informatii nastere(struct informatii a);
int main() {

        struct informatii p;
        p = nastere(a);
        afisare_data_precedenta(a);
        afisare(p);

        }

void afisare_data_precedenta(struct informatii a) {
        printf("ziua nasterii:%d", a.zii);
        printf("\nluna nasterii:%d", a.luna);
        printf("\nanul nasterii:%d", a.an);
}

        
        
struct informatii nastere(struct informatii a) {
        a.zii -= 1;
        a.luna -= 2;
        a.an -= 5;
        return a;
}
void afisare(struct informatii a) {
        printf("\n\nziua nasterii=%d", a.zii);
        printf("\nluna nasterii=%d", a.luna);
        printf("\nanul nasterii=%d", a.an);
}





problema 4

#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include<string.h>
#define MAX 20

struct calendar {
	int zii;
	int luna;
	int an;




};
struct  Angajat {
	char nume[20];
	char prenume[20];
	char ocupatie[20];
	char sectie[20];
	struct calendar data_nasterii;
};

void cit(struct Angajat*);
void afisare_ingineri(struct Angajat*);
int main() {

	struct Angajat dp[20];

	char c[20] = { "inginer" };
	int i, n;
	printf("\nNumar angajati : ");
	scanf("%d", &n);
	if (n <= 0) {
		printf("\n Numar invalid !");
		return 1;
	}
	printf("\n Introduceti datele personale :");
	for (i = 1; i <=n; i++) {
		printf("\n Persoana %d:", i );
		cit(&dp[i]);
	}
	printf("\nlista celor care au ca  ocupatie inginer\n");
	for (i = 1; i <= n; i++) {
		if (not(strcmp(dp[i].ocupatie, c)))
			
			afisare_ingineri(&dp[i]);

	}

	return 0;
}

void cit(struct Angajat *p)
{
	printf("\nNumele: ");
	scanf("%s", p->nume);

	printf("\nPrenumele: ");
	scanf("%s", p->prenume);



	printf("\n ocupatia:");
	scanf("%s", p->ocupatie);

	printf("\nsectia:");
	scanf("%s", p->sectie);

	printf("\nData nasterii:\n");
	printf("\nziua:");
	scanf("%d", &(p->data_nasterii).zii);
	printf("\nluna:");
	scanf("%d", &(p->data_nasterii).luna);
	printf("\nanul:");
	scanf("%d", &(p->data_nasterii).an);

}
void afisare_ingineri(struct Angajat* p) {
	printf("\nNumele:%s \n",p->nume);
	printf("\nprenumele:%s\n", p->prenume);
	printf("\nsectia:%s \n", p->sectie);
	printf("\ndata nasterii: ");
	printf("\nziua:%d\n" ,(p->data_nasterii).zii);
	printf("\nluna:%d\n", (p->data_nasterii).luna);
	printf("\nanul:%d\n", (p->data_nasterii).an);


}


problema 5


#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define MAX 20

struct calendar {
	int zii;
	int luna;
	int an;




};
struct  Angajat {
	char nume[20];
	char prenume[20];
	char ocupatie[20];
	char sectie[20];
	int data_angajarii;
	struct calendar data_nasterii;
};

void cit(struct Angajat*);
void afisare_ingineri(struct Angajat*);
int comp_data_angajarii(const void* a, const void* b);
int main() {

	struct Angajat dp[20];
	int i, n;
	printf("\nNumar angajati : ");
	scanf("%d", &n);
	if (n <= 0) {
		printf("\n Numar invalid !");
		return 1;
	}
	printf("\n Introduceti datele personale :");
	for (i = 1; i <= n; i++) {
		printf("\n Persoana %d:", i);
		cit(&dp[i]);
	}

	printf("\nafisarea in ordinea datei angajarii\n");
	qsort(dp, n, sizeof(Angajat), comp_data_angajarii);
	for (i = 0; i < n; i++) cit(dp + i);



	

	return 0;
}

void cit(struct Angajat* p)
{
	printf("\nNumele: ");
	scanf("%s", p->nume);

	printf("\nPrenumele: ");
	scanf("%s", p->prenume);



	printf("\n ocupatia:");
	scanf("%s", p->ocupatie);

	printf("\nsectia:");
	scanf("%s", p->sectie);

	printf("\ndata angajarii:");
	scanf("%d", &p->data_angajarii);

	printf("\nData nasterii:\n");
	printf("\nziua:");
	scanf("%d", &(p->data_nasterii).zii);
	printf("\nluna:");
	scanf("%d", &(p->data_nasterii).luna);
	printf("\nanul:");
	scanf("%d", &(p->data_nasterii).an);

}
void afisare_ingineri(struct Angajat* p) {
	printf("\nNumele:%s \n", p->nume);
	printf("\nprenumele:%s\n", p->prenume);
	printf("\nsectia:%s \n", p->sectie);
	printf("\ndata nasterii: ");
	printf("\nziua:%d\n", (p->data_nasterii).zii);
	printf("\nluna:%d\n", (p->data_nasterii).luna);
	printf("\nanul:%d\n", (p->data_nasterii).an);


}
int comp_data_angajarii (const void* a, const void* b) {
	Angajat* pa = (Angajat*)a;
	Angajat* pb = (Angajat*)b;
	return (pb->data_angajarii - pa->data_angajarii); 
}
