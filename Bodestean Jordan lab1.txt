
// problema 3 :Bodestean Jordan
//Considerati o structura de date Student, care contine un camp de tip sir de caractere (maxim 30) pentru
nume_prenume si un alt camp nota de tip int. Definiti un obiect de tip Student la care datele vor fi citite de la
tastatura. Validati folosind asertiuni ca nume_prenume sa aiba cel putin 5 caractere iar nota sa fie >=5 si <=10.
Afisati campurile obiectului in caz de introducere corecta//



#define _CRT_SECURE_NO_WARNINGS
#include<iostream>
#include <assert.h>
#include <string.h>

using namespace std;

int main() {
        
        struct student {
                 char nume_prenume[30];
                int nota;



        }c;
        
        cout << " introduceti numele si prenumele  studentului ";
        getline(cin,c.nume_prenume);
        cout << " introduceti nota studentului ";
        cin >> c.nota;
        assert(c.nota > 5 && c.nota < 10);
        cout << c.nota<<endl;
        assert(strlen(c.nume_prenume) > 5);
        cout << c.nume_prenume;



}

/*Bodestean Jordan 
problema 1

. Definiţi funcţii macro MAXi (i=2,3)care determină şi afişează maximul dintre 2 si alta, dintre 3 numere
introduse de la tastatură. Folositi variante diferite (operator conditional, instructiuni if, etc.)
*/
#define _CRT_SECURE_NO_WARNINGS
#include<iostream>
using namespace.std;
#define max2(a,b){\
if(a>b)\
max=a;\
else max=b;}


#define max3(a,b,c){if(a>b&&a>c)\
c=a;
else if (b>a&&b>c)c=b;\
}

int main()
{

int a,b,c,max;
cin>>a>>b>>c;
max2(a,b);
cout<<"maximul dintre 2 elemente este";
cout<<max;

max3(a,b,c);
cout<<"maximul dintre 3 elemente este;
cout<<c;

}





/*problema 2
Definiţi o funcţie inline min( ) care determină şi afişează minimul dintre 2 si alta dintre 3 numere întregi
introduse de la tastatură. Considerati supraincarcarea functiilor.
*/


#include<iostream>
using namespace std;
inline int min2(int a, int b);
inline int min3(int a, int b, int c);
int main() {
        int v1, v2,v3, m2,m3;
        cin >> v1;
        cin >> v2;
        cin >> v3;
        m2 = min2(v1, v2);
        cout << "minimul dintre 2 elemente este";
        m3 = min3(v1, v2, v3);
}


inline int min2(int a, int b)
{
        if (a < b)return a;
        else return b;


}
inline int min3(int a, int b, int c) {
        if (a < b && a < c)
                c = a;
        else if (b < a && b < c)c = b; \

                return c;
}
